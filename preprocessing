import os
import numpy as np
from tqdm import tqdm
from tensorflow.keras.preprocessing import image
from tensorflow.keras.applications.vgg16 import preprocess_input
import pandas as pd

# Paths to image directories
image_dirs = [
    '/content/drive/MyDrive/Fashion_Data/images',
    '/content/drive/MyDrive/Fashion_Data/images/new_images'
]

# Path to your labels CSV file
csv_path = '/content/drive/MyDrive/Fashion_Data/dress.csv'

# Load labels
df = pd.read_csv(csv_path)

# Preprocessing function
def load_and_preprocess_image(image_path):
    img = image.load_img(image_path, target_size=(128, 128))  # Smaller resolution
    img_array = image.img_to_array(img)
    return preprocess_input(img_array)

# Prepare all images and labels
image_data = []
labels = []

for image_dir in image_dirs:
    for image_file in tqdm(os.listdir(image_dir)):
        image_path = os.path.join(image_dir, image_file)

        # Skip directories and non-image files
        if os.path.isdir(image_path) or not image_file.lower().endswith(('.png', '.jpg', '.jpeg')):
            continue

        # Load and preprocess the image
        image_data.append(load_and_preprocess_image(image_path))

        # Extract label based on image filename
        image_id = image_file.split('.')[0]
        matching_row = df[df['_unit_id'] == int(image_id)]
        if not matching_row.empty:
            category = matching_row['category'].values[0]
            labels.append(category)

# Convert to numpy arrays
X = np.array(image_data)
print(f"Shape of X: {X.shape}")
